<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YorkHarborService</name>
    </assembly>
    <members>
        <member name="T:YorkHarborService.Controllers.EmployeeController">
            <summary>
            Employee Controller.
            </summary>
        </member>
        <member name="M:YorkHarborService.Controllers.EmployeeController.#ctor(YorkHarborService.Services.IRepository{YorkHarborService.Models.Employee},Microsoft.Extensions.Logging.ILogger{YorkHarborService.Controllers.EmployeeController})">
            <summary>
            Constructor for the employee controller.
            </summary>
            <param name="employeeRepository">DI injected Book Repository</param>
            <param name="logger">DI injected logger</param>
        </member>
        <member name="M:YorkHarborService.Controllers.EmployeeController.Get">
            <summary>
            This returns all the Employees.
            </summary>
            <returns>IEnumerable of Employees</returns>
        </member>
        <member name="M:YorkHarborService.Controllers.EmployeeController.Get(System.Int32)">
            <summary>
            This method returns one employee
            </summary>
            <param name="id">Id of the employee.</param>
            <returns>A book.</returns>
        </member>
        <member name="M:YorkHarborService.Controllers.EmployeeController.Post(YorkHarborService.Models.Employee)">
            <summary>
            The post method for adding a employee
            </summary>
            <param name="employee">Type of Book</param>
            <returns>Created on success or appropriate code otherwise.</returns>
        </member>
        <member name="M:YorkHarborService.Controllers.EmployeeController.Put(YorkHarborService.Models.Employee)">
            <summary>
            Put method to edit an existing employee.
            </summary>
            <param name="employee">Recieves Employee.</param>
            <returns>Appropriate Http code.</returns>
        </member>
        <member name="M:YorkHarborService.Controllers.EmployeeController.Delete(System.Int32)">
            <summary>
            Deletes an existing employee.
            </summary>
            <param name="id">Id of the employee to be deleted.</param>
            <returns>Appropriate HTTP code.</returns>
        </member>
    </members>
</doc>
